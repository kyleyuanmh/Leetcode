/*


执行用时 :
28 ms, 在所有 C++ 提交中击败了99.61%的用户
内存消耗 :
14.1 MB, 在所有 C++ 提交中击败了81.97%的用户


*/



class Solution {
private:
  void solve(vector<vector<char>>& board,int i,int j)
  {
    board[i][j]='Y';
    if(i>1&&board[i-1][j]=='O')
    {
      solve(board,i-1,j);
    }
    if(j>1&&board[i][j-1]=='O')
    {
      solve(board,i,j-1);
    }
    if(i<board.size()-1&&board[i+1][j]=='O')
    {
      solve(board,i+1,j);
    }
    if(j<board[0].size()-1&&board[i][j+1]=='O')
    {
      solve(board,i,j+1);
    }
  }
  
public:
    void solve(vector<vector<char>>& board) {
      int m = board.size();
      if(m<=0) return;
      int n = board[0].size();
      if(n<=0) return;
      vector<int>tmp(n,0);
      vector<vector<int>>visited(m,tmp);
      for(int i=0;i<n;i++)
      {
        if(board[0][i]=='O')
        {
          solve(board,0,i);
        }
        if(board[m-1][i]=='O')
        {
          solve(board,m-1,i);
        }
      }
      for(int i=1;i<m-1;i++)
      {
        if(board[i][0]=='O')
        {
          solve(board,i,0);
        }
        if(board[i][n-1]=='O')
        {
          solve(board,i,n-1);
        }
      }
      
      for(int i=0;i<m;i++)
      {
        for(int j=0;j<n;j++)
        {
          if(board[i][j]=='O')
          {
            board[i][j]='X';
          }
          if(board[i][j]=='Y')
          {
            board[i][j]='O';
          }
        }
      }
    }
};
