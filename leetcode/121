class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int size = prices.size();
        if(size<=1) return 0;
        stack<int>st;
        int min = prices[0];
        int ans = 0;
        st.push(prices[0]);
        for(int i=1;i<size;i++)
        {
            if(st.empty())
            {
                st.push(prices[i]);
                min = prices[i];
            }
            if(prices[i]<st.top())
            {
                if(prices[i]<min)
                {
                    min = prices[i];
                }
                while(!st.empty()&&prices[i]<st.top())
                {
                    st.pop();
                }
                st.push(prices[i]);
                if(prices[i]-min>ans)
                {
                    ans = prices[i]-min;
                }
            }else
            {
                st.push(prices[i]);
                if(prices[i]-min>ans)
                {
                    ans = prices[i]-min;
                }
            }
        }
        return ans;
    }
};
